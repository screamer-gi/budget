<?php

namespace Partner\Service;

use Application\Service\TreeBuildService;
use Functional as F;
use Application\Filters\FiltersSetInterface;
use Common\Service\CommonServiceInterface;
use Common\Service\Parameters\ParametersInterface;
use Expense\Repository\ExpenseCategoryRepository;

class PartnerCategoryService implements CommonServiceInterface
{
    private $repo;
    private $treeService;

    public function __construct(
        ExpenseCategoryRepository $partnerRepo
    ) {
        $this->repo               = $partnerRepo;
    }

    /**
     * Список
     * @param FiltersSetInterface $filtersSet
     * @return array
     */
    public function getList(FiltersSetInterface $filtersSet = null)
    {
        return $this->repo->findAll();
    }

    /**
     * Дерево
     * @return array
     */
    public function getTree()
    {
        return $this->treeService->getTree($this->repo->findAll());
    }

    /**
     * Создать
     * @param ParametersInterface $parameters
     */
    public function create(ParametersInterface $parameters)
    {
        $entity = $this->repo->newEntity($parameters->getArrayCopy());
        if ($parameters->parent_id) {
            $entity->parent = $this->repo->getById($parameters->parent_id);
        }

        return $entity;
    }

    /**
     * Редактировать
     *
     * @param $id
     * @param ParametersInterface $parameters
     */
    public function edit($id, ParametersInterface $parameters)
    {
        $entity = $this->repo->getById($id);
        $entity->populate($parameters->getArrayCopy());
        $entity->parent = $parameters->parent_id ? $this->repo->getById($parameters->parent_id) : null;
    }

    /**
     * Удаление
     *
     * @param $id
     */
    public function delete($id)
    {
        // @TODO освободить connection
        $this->repo->removeById($id);
    }

    /**
     * Поиск
     *
     * @param $id
     * @return object
     */
    public function find($id)
    {
        return $this->repo->findById($id);
    }
}